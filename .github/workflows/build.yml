name: Build Executable

on: [workflow_dispatch]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '18'

            - name: Install pkg
              run: npm install -g pkg

            - name: Install dependencies
              run: npm install

            - name: Build Linux Executable
              run: pkg . --targets node18-linux-x64 --output backup-linux

            - name: Build Windows Executable
              run: pkg . --targets node18-win-x64 --output backup-win.exe

            - name: Zip executables and specified files
              run: |
                  mkdir gtps-backup-linux
                  cp LICENSE gtps-backup-linux
                  cp config.js.example gtps-backup-linux
                  cp README.md gtps-backup-linux
                  cp backup-linux gtps-backup-linux
                  zip gtps-backup-linux.zip gtps-backup-linux/*
                  mkdir gtps-backup-win
                  cp LICENSE gtps-backup-win
                  cp config.js.example gtps-backup-win
                  cp README.md gtps-backup-win
                  cp backup-win.exe gtps-backup-win
                  zip gtps-backup-win.zip gtps-backup-win/*

            - name: Get version
              id: packagejson
              uses: martinbeentjes/npm-get-version-action@v1.1.0

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.packagejson.outputs.current-version }}
                  release_name: Release ${{ steps.packagejson.outputs.current-version }}
                  draft: false
                  prerelease: false

            - name: Upload Linux Zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./gtps-backup-linux.zip
                  asset_name: gtps-backup-linux.zip
                  asset_content_type: application/zip

            - name: Upload Windows Zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./gtps-backup-win.zip
                  asset_name: gtps-backup-win.zip
                  asset_content_type: application/zip
